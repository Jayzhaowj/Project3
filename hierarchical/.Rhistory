t = 1:1024
x.sim = matrix(nrow = 2, ncol = 1024)
x.sim[1, 1] = x1
x.sim[1, 2] = x2
x.sim[2, 1] = x1
x.sim[2, 2] = x2
at1 = 0.8*(1 - 0.5 * cos(pi*t/1024))
at2 = 0.9*(1 - 0.1 * cos(pi*t/1024))
for(i in 3:1024){
x.sim[1, i] = (at1[i]*x.sim[1, i-1] - 0.81*x.sim[1, i-2] + rnorm(1, 0, 1))
x.sim[2, i] = at2[i]*x.sim[2, i-1] - 0.9*x.sim[2, i-2] + rnorm(1, 0, 1)
}
n_t <- 1024
V1t <- rep(list(diag(2)), n_t)
#mk_0 <- c(0, 0)
#Ck_0 <- 10*diag(2)
V2t <- rep(list(0.000001*diag(2)), n_t)
Wt <- rep(list(0.00001*diag(2)), n_t)
F2t <- rbind(c(1, 1), c(1, -1))
#Gt <- rep(list(diag(2)), n_t)
result_parcor <- parcor.fun(x.sim = x.sim, delta = 0.99,
V2t = V2t, P = 2, F2 = F2t)
coef_parcor <- ad.est(result_parcor$phi_f, result_parcor$phi_b, P = 2)
coef <- compute.coef(coef_parcor, I=2, P = 2, n_t)
coef_mu_tmp <- ad.est(result_parcor$mu_f, result_parcor$mu_b, P=2)
coef_mu <- compute.coef(coef_mu_tmp, I = 2, P = 2, n_t)
#####################################
## draw spectral density plots
#####################################
#### compute spectral density #####
png(filename = paste0(plot_dir, 'est_1st.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(coef[[1]], rep(1, 1024), main = NULL, zlim = c(-3, 8), cex.lab = 1.5)
dev.off()
png(filename = paste0(plot_dir, 'est_2st.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(coef[[2]], rep(1, 1024), main = NULL, zlim = c(-3, 8), cex.lab = 1.5)
dev.off()
png(filename = paste0(plot_dir, 'est_mean.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(coef_mu[[1]], rep(1, 1024), main = NULL, zlim = c(-3, 8), cex.lab = 1.5)
dev.off()
png(filename = paste0(plot_dir, 'true_1st.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(rbind(at1, -0.81), rep(1, 1024), main = NULL, zlim = c(-3, 8))
dev.off()
png(filename = paste0(plot_dir, 'true_2st.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(rbind(at2, -0.9), rep(1, 1024), main = NULL, zlim = c(-3, 8), cex.lab = 1.5)
dev.off()
#mk_0 <- c(0, 0)
#Ck_0 <- 10*diag(2)
V2t <- rep(list(diag(2)), n_t)
#Gt <- rep(list(diag(2)), n_t)
result_parcor <- parcor.fun(x.sim = x.sim, delta = 0.99,
V2t = V2t, P = 2, F2 = F2t)
coef_parcor <- ad.est(result_parcor$phi_f, result_parcor$phi_b, P = 2)
coef <- compute.coef(coef_parcor, I=2, P = 2, n_t)
coef_mu_tmp <- ad.est(result_parcor$mu_f, result_parcor$mu_b, P=2)
coef_mu <- compute.coef(coef_mu_tmp, I = 2, P = 2, n_t)
#####################################
## draw spectral density plots
#####################################
#### compute spectral density #####
png(filename = paste0(plot_dir, 'est_1st.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(coef[[1]], rep(1, 1024), main = NULL, zlim = c(-3, 8), cex.lab = 1.5)
dev.off()
png(filename = paste0(plot_dir, 'est_2st.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(coef[[2]], rep(1, 1024), main = NULL, zlim = c(-3, 8), cex.lab = 1.5)
dev.off()
png(filename = paste0(plot_dir, 'est_mean.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(coef_mu[[1]], rep(1, 1024), main = NULL, zlim = c(-3, 8), cex.lab = 1.5)
dev.off()
png(filename = paste0(plot_dir, 'true_1st.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(rbind(at1, -0.81), rep(1, 1024), main = NULL, zlim = c(-3, 8))
dev.off()
png(filename = paste0(plot_dir, 'true_2st.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(rbind(at2, -0.9), rep(1, 1024), main = NULL, zlim = c(-3, 8), cex.lab = 1.5)
dev.off()
#mk_0 <- c(0, 0)
#Ck_0 <- 10*diag(2)
V2t <- rep(list(0.0001*diag(2)), n_t)
#Gt <- rep(list(diag(2)), n_t)
result_parcor <- parcor.fun(x.sim = x.sim, delta = 0.99,
V2t = V2t, P = 2, F2 = F2t)
coef_parcor <- ad.est(result_parcor$phi_f, result_parcor$phi_b, P = 2)
coef <- compute.coef(coef_parcor, I=2, P = 2, n_t)
coef_mu_tmp <- ad.est(result_parcor$mu_f, result_parcor$mu_b, P=2)
coef_mu <- compute.coef(coef_mu_tmp, I = 2, P = 2, n_t)
#####################################
## draw spectral density plots
#####################################
#### compute spectral density #####
png(filename = paste0(plot_dir, 'est_1st.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(coef[[1]], rep(1, 1024), main = NULL, zlim = c(-3, 8), cex.lab = 1.5)
dev.off()
png(filename = paste0(plot_dir, 'est_2st.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(coef[[2]], rep(1, 1024), main = NULL, zlim = c(-3, 8), cex.lab = 1.5)
dev.off()
png(filename = paste0(plot_dir, 'est_mean.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(coef_mu[[1]], rep(1, 1024), main = NULL, zlim = c(-3, 8), cex.lab = 1.5)
dev.off()
png(filename = paste0(plot_dir, 'true_1st.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(rbind(at1, -0.81), rep(1, 1024), main = NULL, zlim = c(-3, 8))
dev.off()
png(filename = paste0(plot_dir, 'true_2st.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(rbind(at2, -0.9), rep(1, 1024), main = NULL, zlim = c(-3, 8), cex.lab = 1.5)
dev.off()
#mk_0 <- c(0, 0)
#Ck_0 <- 10*diag(2)
V2t <- rep(list(0.00001*diag(2)), n_t)
#Gt <- rep(list(diag(2)), n_t)
result_parcor <- parcor.fun(x.sim = x.sim, delta = 0.99,
V2t = V2t, P = 2, F2 = F2t)
coef_parcor <- ad.est(result_parcor$phi_f, result_parcor$phi_b, P = 2)
coef <- compute.coef(coef_parcor, I=2, P = 2, n_t)
coef_mu_tmp <- ad.est(result_parcor$mu_f, result_parcor$mu_b, P=2)
coef_mu <- compute.coef(coef_mu_tmp, I = 2, P = 2, n_t)
#####################################
## draw spectral density plots
#####################################
#### compute spectral density #####
png(filename = paste0(plot_dir, 'est_1st.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(coef[[1]], rep(1, 1024), main = NULL, zlim = c(-3, 8), cex.lab = 1.5)
dev.off()
png(filename = paste0(plot_dir, 'est_2st.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(coef[[2]], rep(1, 1024), main = NULL, zlim = c(-3, 8), cex.lab = 1.5)
dev.off()
png(filename = paste0(plot_dir, 'est_mean.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(coef_mu[[1]], rep(1, 1024), main = NULL, zlim = c(-3, 8), cex.lab = 1.5)
dev.off()
png(filename = paste0(plot_dir, 'true_1st.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(rbind(at1, -0.81), rep(1, 1024), main = NULL, zlim = c(-3, 8))
dev.off()
png(filename = paste0(plot_dir, 'true_2st.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(rbind(at2, -0.9), rep(1, 1024), main = NULL, zlim = c(-3, 8), cex.lab = 1.5)
dev.off()
n_t <- 1024
V1t <- rep(list(diag(2)), n_t)
#mk_0 <- c(0, 0)
#Ck_0 <- 10*diag(2)
V2t <- rep(list(0.00001*diag(2)), n_t)
Wt <- rep(list(0.00001*diag(2)), n_t)
F2t <- rbind(c(1, 1), c(1, -1))
#Gt <- rep(list(diag(2)), n_t)
result_parcor <- parcor.fun(x.sim = x.sim, delta1 = 0.99, delta2 = 0.99,
P = 2, F2 = F2t)
source(paste0(dir1, 'hier_PARCOR_NEW.R'))
#Gt <- rep(list(diag(2)), n_t)
result_parcor <- parcor.fun(x.sim = x.sim, delta1 = 0.99, delta2 = 0.99,
P = 2, F2 = F2t)
#Gt <- rep(list(diag(2)), n_t)
result_parcor <- parcor.fun(x.sim = x.sim, delta1 = 0.99, delta2 = 0.99,
P = 2, F2 = F2t)
source(paste0(dir1, 'hier_PARCOR_NEW.R'))
#Gt <- rep(list(diag(2)), n_t)
result_parcor <- parcor.fun(x.sim = x.sim, delta1 = 0.99, delta2 = 0.99,
P = 2, F2 = F2t)
coef_parcor <- ad.est(result_parcor$phi_f, result_parcor$phi_b, P = 2)
coef <- compute.coef(coef_parcor, I=2, P = 2, n_t)
coef_mu_tmp <- ad.est(result_parcor$mu_f, result_parcor$mu_b, P=2)
coef_mu <- compute.coef(coef_mu_tmp, I = 2, P = 2, n_t)
#####################################
## draw spectral density plots
#####################################
#### compute spectral density #####
png(filename = paste0(plot_dir, 'est_1st.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(coef[[1]], rep(1, 1024), main = NULL, zlim = c(-3, 8), cex.lab = 1.5)
dev.off()
png(filename = paste0(plot_dir, 'est_2st.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(coef[[2]], rep(1, 1024), main = NULL, zlim = c(-3, 8), cex.lab = 1.5)
dev.off()
png(filename = paste0(plot_dir, 'est_mean.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(coef_mu[[1]], rep(1, 1024), main = NULL, zlim = c(-3, 8), cex.lab = 1.5)
dev.off()
png(filename = paste0(plot_dir, 'true_1st.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(rbind(at1, -0.81), rep(1, 1024), main = NULL, zlim = c(-3, 8))
dev.off()
png(filename = paste0(plot_dir, 'true_2st.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(rbind(at2, -0.9), rep(1, 1024), main = NULL, zlim = c(-3, 8), cex.lab = 1.5)
dev.off()
walker()
install.packages("walker")
dir1 <- '/Users/johnn/Documents/Research/Project3/hierarchical/'
plot_dir <- "/Users/johnn/Documents/Research/Project3/hierarchical/plots/"
source(paste0(dir1, 'hier_PARCOR_cpp.R'))
source(paste0(dir1, "draw_density_new.R"))
test <- matrix(1:6, 2, 3)
test
apply(test, 1, sum)
Mod(c(1+1i, 1-1i))
set.seed(1)
x1 = 1
x2 = 2
t = 1:1024
x.sim = matrix(nrow = 2, ncol = 1024)
x.sim[1, 1] = x1
x.sim[1, 2] = x2
x.sim[2, 1] = x1
x.sim[2, 2] = x2
at1 = 0.8*(1 - 0.5 * cos(pi*t/1024))
at2 = 0.9*(1 - 0.1 * cos(pi*t/1024))
for(i in 3:1024){
x.sim[1, i] = (at1[i]*x.sim[1, i-1] - 0.81*x.sim[1, i-2] + rnorm(1, 0, 1))
x.sim[2, i] = at2[i]*x.sim[2, i-1] - 0.9*x.sim[2, i-2] + rnorm(1, 0, 1)
}
true_ar <- array(NA, dim = c(2, n_t, P))
true_ar[1, , 1] <- at1
true_ar[2, , 1] <- at2
set.seed(1)
x1 <- 1
x2 <- 2
n_t <- 1024
I <- 2
P <- 2
x.sim = matrix(nrow = I, ncol = n_t)
x.sim[1, 1] = x1
x.sim[1, 2] = x2
x.sim[2, 1] = x1
x.sim[2, 2] = x2
at1 = 0.8*(1 - 0.5 * cos(pi*t/1024))
at2 = 0.9*(1 - 0.1 * cos(pi*t/1024))
for(i in (P+1):n_t){
x.sim[1, i] = (at1[i]*x.sim[1, i-1] - 0.81*x.sim[1, i-2] + rnorm(1, 0, 1))
x.sim[2, i] = at2[i]*x.sim[2, i-1] - 0.9*x.sim[2, i-2] + rnorm(1, 0, 1)
}
true_ar <- array(NA, dim = c(2, n_t, P))
true_ar[1, , 1] <- at1
true_ar[2, , 1] <- at2
true_ar[1, , 2] <- -0.81
true_ar[2, , 2] <- -0.9
#n_t <- 1024
V1t <- rep(list(diag(2)), n_t)
#mk_0 <- c(0, 0)
#Ck_0 <- 10*diag(2)
V2t <- rep(list(0.00001*diag(2)), n_t)
Wt <- rep(list(0.00001*diag(2)), n_t)
F2t <- rbind(c(1, 1), c(1, -1))
#Gt <- rep(list(diag(2)), n_t)
result_parcor <- hier_parcor(yt = t(x.sim), delta1 = 0.99, delta2 = 0.99, P = 2, F2 = F2t)
## compute ar coefficients
coef_parcor <- PAR_to_AR_fun(phi_fwd = result_parcor$phi_fwd, phi_bwd = result_parcor$phi_bwd)
coef <- coef_parcor[[2]]$forward
dim(coef)
#Gt <- rep(list(diag(2)), n_t)
result_parcor <- hier_parcor(yt = t(x.sim), delta1 = 0.99, delta2 = 0.99, P = 3, F2 = F2t)
## compute ar coefficients
coef_parcor <- PAR_to_AR_fun(phi_fwd = result_parcor$phi_fwd, phi_bwd = result_parcor$phi_bwd)
coef <- coef_parcor[[3]]$forward
dim(coef)
## compute ar coefficients
coef_parcor <- PAR_to_AR_fun(phi_fwd = result_parcor$phi_fwd, phi_bwd = result_parcor$phi_bwd)
#Gt <- rep(list(diag(2)), n_t)
result_parcor <- hier_parcor(yt = t(x.sim), delta1 = 0.99, delta2 = 0.99, P = 2, F2 = F2t)
## compute ar coefficients
coef_parcor <- PAR_to_AR_fun(phi_fwd = result_parcor$phi_fwd, phi_bwd = result_parcor$phi_bwd)
coef <- coef_parcor[[2]]$forward
dev.new()
layout(matrix(1:4, 2, 2))
layout.show(n = 4)
for(i in 1:2){
for(j in 1:P){
plot(coef[i, (P+1):(n_t-P), j], xlab = "time", ylab = "value",
type = 'l', main = bquote(phi[.(i)*.(j)]),
ylim = range(coef, true_ar, na.rm = TRUE))
lines(true_ar[i, (P+1):(n_t-P), j], type = 'l', col = 'red')
}
}
layout(matrix(1:4, 2, 2))
layout.show(n = 4)
for(i in 1:2){
for(j in 1:P){
plot(coef[i, (P+1):(n_t-P), j], xlab = "time", ylab = "value",
type = 'l', main = bquote(phi[.(i)*.(j)]),
ylim = range(coef, true_ar, na.rm = TRUE))
lines(true_ar[i, (P+1):(n_t-P), j], type = 'l', col = 'red')
}
}
rep(result_parcor$sigma2t_fwd[n_t-P, 2], n_t)
s_true <- compute_sd(true_ar, rep(1, n_t))
png(filename = paste0(plot_dir, 'true_1st.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(s = s_true, index = 1, n_t = n_t, P = P)
dev.off()
cal.tfr <- function(phi, sigma2, w, n_t, P){
## phi is ith time series coefficients
## return the log spectral density
exp_part <- exp(-2i * pi * w * (1:P))
browser()
return(sigma2/(Mod(1 - apply(phi * exp_part, 1, sum, na.rm = TRUE)))^2)
}
s_true <- compute_sd(true_ar, rep(1, n_t), w)
w <- seq(0.001, 0.499, 0.001)
s_true <- compute_sd(true_ar, rep(1, n_t), w)
cal.tfr <- function(phi, sigma2, w, n_t, P){
## phi is ith time series coefficients
## return the log spectral density
exp_part <- exp(-2i * pi * w * (1:P))
browser()
return(sigma2/(Mod(1 - apply(phi * exp_part, 1, sum, na.rm = TRUE)))^2)
}
compute_sd <- function(phi, sigma2, w){
P <- dim(phi)[3]
n_t <- dim(phi)[2]
n_I <- dim(phi)[1]
s <- rep(list(matrix(NA, nrow = n_t, ncol = length(w))), n_I)
for(i in 1:n_I){
for(j in 1:length(w)){
s[[i]][, j] <- cal.tfr(phi[i, , ], sigma2, w[j], n_t, P)
}
#browser()
}
cat("Calculation has been completed! \n")
return(s)
}
w <- seq(0.001, 0.499, by = 0.001)
s_true <- compute_sd(true_ar, rep(1, n_t), w)
exp_part
phi
phi[1:2, ] * exp_part
phi[1, ] * exp_part
t(phi[1:2, ]) * exp_part
t(phi[1:3, ]) * exp_part
cal.tfr <- function(phi, sigma2, w, n_t, P){
## phi is ith time series coefficients
## return the log spectral density
exp_part <- exp(-2i * pi * w * (1:P))
browser()
return(sigma2/(Mod(1 - apply(t(phi) * exp_part, 2, sum, na.rm = TRUE)))^2)
}
compute_sd <- function(phi, sigma2, w){
P <- dim(phi)[3]
n_t <- dim(phi)[2]
n_I <- dim(phi)[1]
s <- rep(list(matrix(NA, nrow = n_t, ncol = length(w))), n_I)
for(i in 1:n_I){
for(j in 1:length(w)){
s[[i]][, j] <- cal.tfr(phi[i, , ], sigma2, w[j], n_t, P)
}
#browser()
}
cat("Calculation has been completed! \n")
return(s)
}
cal.tfr <- function(phi, sigma2, w, n_t, P){
## phi is ith time series coefficients
## return the log spectral density
exp_part <- exp(-2i * pi * w * (1:P))
#browser()
return(sigma2/(Mod(1 - apply(t(phi) * exp_part, 2, sum, na.rm = TRUE)))^2)
}
s_true <- compute_sd(true_ar, rep(1, n_t), w)
png(filename = paste0(plot_dir, 'true_1st.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(s = s_true, index = 1, n_t = n_t, P = P)
dev.off()
draw.density <- function(w, index, P, n_t, s){
x_coord <- seq(0, 1, length.out = n_t-2*P)
y_coord <- w
jet.colors <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan", "#7FFF7F",
"yellow", "#FF7F00", "red", "#7F0000"))
filled.contour(x_coord, y_coord, s[[index]][(P+1):(n_t-P), ], xlab = 'time',
ylab = 'frequency', color.palette = jet.colors)
cat('Graph has been drawn!\n')
}
png(filename = paste0(plot_dir, 'true_1st.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(w = w, s = s_true, index = 1, n_t = n_t, P = P)
dev.off()
cal.tfr <- function(phi, sigma2, w, n_t, P){
## phi is ith time series coefficients
## return the log spectral density
exp_part <- exp(-2i * pi * w * (1:P))
#browser()
return(log(sigma2) - log((Mod(1 - apply(t(phi) * exp_part, 2, sum, na.rm = TRUE)))^2))
}
s_true <- compute_sd(true_ar, rep(1, n_t), w)
png(filename = paste0(plot_dir, 'true_1st.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(w = w, s = s_true, index = 1, n_t = n_t, P = P)
dev.off()
draw.density <- function(w, index, P, n_t, s){
x_coord <- seq(0, 1, length.out = n_t-2*P)
y_coord <- w
jet.colors <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan", "#7FFF7F",
"yellow", "#FF7F00", "red", "#7F0000"))
filled.contour(x_coord, y_coord, s[[index]][(P+1):(n_t-P), ], xlab = 'time',
ylab = 'frequency', main = bquote("log sc: "*"f"[.(index)]), color.palette = jet.colors)
cat('Graph has been drawn!\n')
}
png(filename = paste0(plot_dir, 'true_1st.png'))
par(cex.lab = 1.5, cex.axis = 1.5)
draw.density(w = w, s = s_true, index = 1, n_t = n_t, P = P)
dev.off()
png(filename = paste0(plot_dir, 'true_1st.png'))
par(cex.lab = 1.5, cex.axis = 1.5, cex.main = 1.5)
draw.density(w = w, s = s_true, index = 1, n_t = n_t, P = P)
dev.off()
source('~/Research/Project3/hierarchical/draw_density_new.R')
#####################################
## draw spectral density plots
#####################################
#### compute spectral density #####
png(filename = paste0(plot_dir, 'est_1st.png'))
par(cex.lab = 1.5, cex.axis = 1.5, cex.main = 1.5)
draw.density(w = w, index = 1, P = P, n_t = n_t, s = s)
dev.off()
## compute spectral density
s <- compute_sd(phi = coef, sigma2 = rep(result_parcor$sigma2t_fwd[n_t-P, 2], n_t))
## compute spectral density
s <- compute_sd(w = w,
phi = coef,
sigma2 = rep(result_parcor$sigma2t_fwd[n_t-P, 2], n_t))
#####################################
## draw spectral density plots
#####################################
#### compute spectral density #####
png(filename = paste0(plot_dir, 'est_1st.png'))
par(cex.lab = 1.5, cex.axis = 1.5, cex.main = 1.5)
draw.density(w = w, index = 1, P = P, n_t = n_t, s = s)
dev.off()
#####################################
## draw spectral density plots
#####################################
#### compute spectral density #####
png(filename = paste0(plot_dir, 'est_1st.png'))
par(cex.lab = 1.5, cex.axis = 1.5, cex.main = 1.5)
draw.density(w = w, index = 1, P = P, n_t = n_t, s = s, range(s, s_true))
draw.density <- function(w, index, P, n_t, s, ...){
x_coord <- seq(0, 1, length.out = n_t-2*P)
y_coord <- w
jet.colors <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan", "#7FFF7F",
"yellow", "#FF7F00", "red", "#7F0000"))
filled.contour(x_coord, y_coord, s[[index]][(P+1):(n_t-P), ], xlab = 'time',
ylab = 'frequency', main = bquote("log sc: "*"f"[.(index)]),
color.palette = jet.colors, ...)
cat('Graph has been drawn!\n')
}
#####################################
## draw spectral density plots
#####################################
#### compute spectral density #####
png(filename = paste0(plot_dir, 'est_1st.png'))
par(cex.lab = 1.5, cex.axis = 1.5, cex.main = 1.5)
draw.density(w = w, index = 1, P = P, n_t = n_t, s = s, zlim = range(s, s_true))
dev.off()
dim(s[[1]])
index <- 1
png(filename = paste0(plot_dir, 'est_', index, 'st.png'))
par(cex.lab = 1.5, cex.axis = 1.5, cex.main = 1.5)
draw.density(w = w, index = 1, P = P,
n_t = n_t, s = s, zlim = range(s[[1]][(P+1):(n_t-P),],
s_true[[1]][(P+1):(n_t-P), ]))
dev.off()
#### for time series 2
index <- 2
png(filename = paste0(plot_dir, 'est_', index, 'st.png'))
par(cex.lab = 1.5, cex.axis = 1.5, cex.main = 1.5)
draw.density(w = w, index = index, P = P,
n_t = n_t, s = s, zlim = range(s[[index]][(P+1):(n_t-P),],
s_true[[index]][(P+1):(n_t-P), ]))
dev.off()
coef_parcor_mean <- PAR_to_AR_fun(phi_fwd = result_parcor$mu_fwd,
phi_bwd = result_parcor$mu_bwd)
coef <- coef_parcor_mean[[2]]$forward
coef <- coef_parcor[[2]]$forward
coef_mean <- coef_parcor_mean[[2]]$forward
s_mean <- compute_sd(w=w,
phi= coef_mean,
sigma2 = rep(result_parcor$sigma2t_fwd[n_t-P, 2], n_t))
s_mean[[1]]
#### for time series 2
index <- 1
png(filename = paste0(plot_dir, 'est_', index, 'mean.png'))
par(cex.lab = 1.5, cex.axis = 1.5, cex.main = 1.5)
draw.density(w = w, index = index, P = P,
n_t = n_t, s = s, zlim = range(s[[index]][(P+1):(n_t-P),]))
dev.off()
index <- 1
png(filename = paste0(plot_dir, 'true_', index, 'st.png'))
par(cex.lab = 1.5, cex.axis = 1.5, cex.main = 1.5)
draw.density(w = w, index = index, P = P,
n_t = n_t, s = s_true, zlim = range(s[[index]][(P+1):(n_t-P),],
s_true[[index]][(P+1):(n_t-P), ]))
dev.off()
index <- 2
png(filename = paste0(plot_dir, 'true_', index, 'st.png'))
par(cex.lab = 1.5, cex.axis = 1.5, cex.main = 1.5)
draw.density(w = w, index = index, P = P,
n_t = n_t, s = s_true, zlim = range(s[[index]][(P+1):(n_t-P),],
s_true[[index]][(P+1):(n_t-P), ]))
dev.off()
